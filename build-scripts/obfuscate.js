const JavaScriptObfuscator = require('javascript-obfuscator');
const fs = require('fs');
const path = require('path');

console.log('üîí Starting code obfuscation...');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏
const obfuscationOptions = {
    compact: true,
    controlFlowFlattening: true,
    controlFlowFlatteningThreshold: 0.75,
    deadCodeInjection: true,
    deadCodeInjectionThreshold: 0.4,
    debugProtection: true,
    debugProtectionInterval: true,
    disableConsoleOutput: true,
    identifierNamesGenerator: 'hexadecimal',
    log: false,
    renameGlobals: false,
    rotateStringArray: true,
    selfDefending: true,
    shuffleStringArray: true,
    splitStrings: true,
    splitStringsChunkLength: 10,
    stringArray: true,
    stringArrayEncoding: ['base64'],
    stringArrayThreshold: 0.75,
    transformObjectKeys: true,
    unicodeEscapeSequence: false
};

// –û–±—Ñ—É—Å–∫–∞—Ü–∏—è renderer.js
const rendererPath = path.join(__dirname, '../public/renderer.js');
const rendererCode = fs.readFileSync(rendererPath, 'utf8');

console.log('üîÑ Obfuscating renderer.js...');
const obfuscatedRenderer = JavaScriptObfuscator.obfuscate(rendererCode, obfuscationOptions);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ñ—É—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
fs.writeFileSync(
    path.join(__dirname, '../public/renderer.min.js'),
    obfuscatedRenderer.getObfuscatedCode()
);

// –°–æ–∑–¥–∞–µ–º production –≤–µ—Ä—Å–∏—é HTML
const indexPath = path.join(__dirname, '../public/index.html');
let indexContent = fs.readFileSync(indexPath, 'utf8');

// –ó–∞–º–µ–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ñ—É—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
indexContent = indexContent.replace(
    '<script src="renderer.js"></script>',
    '<script src="renderer.min.js"></script>'
);

fs.writeFileSync(
    path.join(__dirname, '../public/index.prod.html'),
    indexContent
);

console.log('‚úÖ Obfuscation completed!');
console.log('üìÅ Files created:');
console.log('   - public/renderer.min.js (obfuscated)');
console.log('   - public/index.prod.html (production)'); 