const crypto = require('crypto');

// Telegram Bot Token –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏
const BOT_TOKEN = process.env.BOT_TOKEN || 'YOUR_BOT_TOKEN';

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram
 */
function verifyTelegramWebAppData(telegramInitData) {
    if (!telegramInitData) return false;
    
    try {
        const urlParams = new URLSearchParams(telegramInitData);
        const hash = urlParams.get('hash');
        urlParams.delete('hash');
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        const dataCheckString = Array.from(urlParams.entries())
            .sort(([a], [b]) => a.localeCompare(b))
            .map(([key, value]) => `${key}=${value}`)
            .join('\n');
        
        // –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
        const secretKey = crypto
            .createHmac('sha256', 'WebAppData')
            .update(BOT_TOKEN)
            .digest();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
        const calculatedHash = crypto
            .createHmac('sha256', secretKey)
            .update(dataCheckString)
            .digest('hex');
        
        return calculatedHash === hash;
    } catch (error) {
        console.error('‚ùå Telegram auth error:', error);
        return false;
    }
}

/**
 * Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
 */
function telegramAuthMiddleware(req, res, next) {
    const telegramData = req.headers['x-telegram-init-data'];
    const userAgent = req.headers['user-agent'] || '';
    
    // –í development —Ä–µ–∂–∏–º–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    if (process.env.NODE_ENV === 'development') {
        console.log('üîì Development mode - skipping auth');
        return next();
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º User-Agent –Ω–∞ Telegram
    const isTelegramUA = userAgent.includes('TelegramBot') || 
                        userAgent.includes('Telegram') ||
                        req.headers['x-requested-with'] === 'org.telegram.messenger';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –¥–∞–Ω–Ω—ã–µ
    const isValidTelegram = telegramData && verifyTelegramWebAppData(telegramData);
    
    if (!isTelegramUA && !isValidTelegram) {
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
        res.status(403).json({
            error: 'Access denied',
            message: 'This application can only be accessed through Telegram',
            code: 'TELEGRAM_ONLY'
        });
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ request
    if (telegramData && isValidTelegram) {
        try {
            const urlParams = new URLSearchParams(telegramData);
            const userParam = urlParams.get('user');
            if (userParam) {
                req.telegramUser = JSON.parse(userParam);
                console.log(`üë§ Authenticated user: ${req.telegramUser.id}`);
            }
        } catch (error) {
            console.error('‚ùå Error parsing user data:', error);
        }
    }
    
    next();
}

/**
 * –ü—Ä–æ—Å—Ç–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ (–±–µ–∑ Telegram)
 */
function basicTelegramCheck(req, res, next) {
    const referer = req.headers.referer || '';
    const userAgent = req.headers['user-agent'] || '';
    
    // –í development —Ä–µ–∂–∏–º–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if (process.env.NODE_ENV === 'development') {
        return next();
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ Telegram
    const isTelegram = userAgent.includes('Telegram') || 
                      referer.includes('t.me') ||
                      req.headers['x-requested-with'] === 'org.telegram.messenger';
    
    if (!isTelegram) {
        res.status(403).send(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>Access Denied</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        text-align: center;
                        background: #2a2a2a;
                        color: white;
                        padding: 50px;
                    }
                    .container {
                        max-width: 500px;
                        margin: 0 auto;
                        background: #1a1a1a;
                        padding: 40px;
                        border-radius: 15px;
                        border: 2px solid #00ff88;
                    }
                    .icon { font-size: 64px; margin-bottom: 20px; }
                    h1 { color: #00ff88; margin-bottom: 20px; }
                    p { margin-bottom: 15px; line-height: 1.6; }
                    .telegram-btn {
                        display: inline-block;
                        background: #0088cc;
                        color: white;
                        padding: 15px 30px;
                        text-decoration: none;
                        border-radius: 10px;
                        margin-top: 20px;
                        font-weight: bold;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="icon">ü¶Ö</div>
                    <h1>Access Denied</h1>
                    <p>This application is exclusively available through Telegram.</p>
                    <p>Please use the official Telegram bot to access Eagle Scanner.</p>
                    <a href="https://t.me/eagle_scanner_bot" class="telegram-btn">
                        Open in Telegram
                    </a>
                </div>
            </body>
            </html>
        `);
        return;
    }
    
    next();
}

module.exports = {
    verifyTelegramWebAppData,
    telegramAuthMiddleware,
    basicTelegramCheck
}; 